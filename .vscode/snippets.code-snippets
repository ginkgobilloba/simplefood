{
  // Place your GLOBAL snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "max-width + orientation": {
    "scope": "scss",
    "prefix": "wmax",
    "body": ["@include wmax(${1:width}) {", "  $0", "}"],
    "description": "creates a max-width media query with orientation parameters"
  },

  "min-width + orientation": {
    "scope": "scss",
    "prefix": "wmin",
    "body": ["@include wmin(${1:width}) {", "  $0", "}"],
    "description": "creates a min-width media query with orientation parameters"
  },

  "max-height": {
    "scope": "scss",
    "prefix": "hmax",
    "body": ["@include hmax(${1:height}) {", "  $0", "}"],
    "description": "creates a max-height media query"
  },

  "min-height": {
    "scope": "scss",
    "prefix": "hmin",
    "body": ["@include hmin(${1:height}) {", "  $0", "}"],
    "description": "creates a min-height media query"
  },

  "mouse": {
    "scope": "scss",
    "prefix": "hv",
    "body": ["@include hover {", "$0", "}"],
    "description": "creates a media query for devices with mouse/touchpad"
  },

  "background-image": {
    "scope": "scss",
    "prefix": "bg",
    "body": ["@include background-image(${0:cover});"],
    "description": "creates a bg-image template with default size === cover"
  },

  "mask-image": {
    "scope": "scss",
    "prefix": "mask",
    "body": ["@include mask-image(${0:contain});"],
    "description": "creates a mask-image template with default size === contain"
  }
}
